<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>gepi-webapp</artifactId>
    <packaging>war</packaging>
    <name>gepi-webapp Tapestry 5 Application</name>
    <dependencies>
        <dependency>
            <groupId>de.julielab</groupId>
            <artifactId>gepi-core</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>de.julielab</groupId>
            <artifactId>gepi-core</artifactId>
            <classifier>tests</classifier>
            <type>test-jar</type>
            <version>${project.parent.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <!-- To set up an application with a database, change the artifactId below to
             tapestry-hibernate, and add a dependency on your JDBC driver. You'll also
             need to add Hibernate configuration files, such as hibernate.cfg.xml. -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-http</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!-- EF 10-2020: required for the built-in less compiler. However, the last time I wanted to include this, the less compiler library was not loaded
        by intellij. Since I didn't need it, I just removed the dependency. -->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.tapestry</groupId>-->
        <!--            <artifactId>tapestry-webresources</artifactId>-->
        <!--            <version>${tapestry-release-version}</version>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>com.google.guava</groupId>-->
        <!--                    <artifactId>guava</artifactId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->

        <!-- Uncomment this to add support for file uploads: -->
        <!--
         <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-upload</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>
        -->

        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng-release-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Provided by the servlet container, but sometimes referenced in the application
       code. -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>${servlet-api-release-version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>

        <!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-javadoc</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.15</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gepi-test-data</artifactId>
            <version>${project.parent.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>gepi-webapp</finalName>
        <plugins>
            <plugin>
                <!-- Unpack the test data from the respective Maven module so we can use it in our tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-test-data</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <includeArtifactIds>gepi-test-data</includeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                            <!--use as much as needed to be specific...also scope,type,classifier etc-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Run the application using "mvn jetty:run" -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>10.0.9</version>
                <configuration>
                    <systemProperties>
                        <systemProperty>
                            <name>tapestry.execution-mode</name>
                            <value>development</value>
                        </systemProperty>
                    </systemProperties>
                    <skip>false</skip>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                &lt;!&ndash; Run the application using "mvn jetty:run" &ndash;&gt;-->
<!--                <groupId>org.mortbay.jetty</groupId>-->
<!--                <artifactId>maven-jetty-plugin</artifactId>-->
<!--                <version>6.1.16</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; Log to the console. &ndash;&gt;-->
<!--                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">-->
<!--                        &lt;!&ndash; This doesn't do anything for Jetty, but is a workaround for a Maven bug-->
<!--                             that prevents the requestLog from being set. &ndash;&gt;-->
<!--                        <append>true</append>-->
<!--                    </requestLog>-->
<!--                    <systemProperties>-->
<!--                        <systemProperty>-->
<!--                            <name>tapestry.execution-mode</name>-->
<!--                            <value>development</value>-->
<!--                        </systemProperty>-->
<!--                    </systemProperties>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
        </plugins>
    </build>

    <reporting/>

    <repositories>

        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>

        <!-- This repository is only needed when the Tapestry version is a preview release, rather
             than a final release. -->
        <repository>
            <id>apache-staging</id>
            <url>https://repository.apache.org/content/groups/staging/</url>
        </repository>
    </repositories>

    <properties>
        <servlet-api-release-version>5.0.0</servlet-api-release-version>
        <testng-release-version>6.8.21</testng-release-version>
    </properties>

    <parent>
        <groupId>de.julielab</groupId>
        <artifactId>gepi</artifactId>
        <version>0.10.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
</project>
