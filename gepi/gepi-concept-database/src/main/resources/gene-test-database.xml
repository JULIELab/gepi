<?xml version="1.0"?>
<conceptdatabase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns="http://www.julielab.de/conceptdb"
                 xsi:schemaLocation="http://www.julielab.de/conceptdb http://www.julielab.de/conceptdb/conceptdb-1.1.0.xsd http://www.julielab.de/conceptdb/concepts/ncbigene
                 http://www.julielab.de/conceptdb/concepts/ncbigeneconcepts-1.1.0.xsd
                 http://www.julielab.de/conceptdb/facets/default http://www.julielab.de/conceptdb/facets/defaultfacet-1.1.0.xsd">
    <versioning>
        <version>0.2</version>
    </versioning>
    <connection>
        <uri>testdata-db</uri>
        <user></user>
        <password></password>
    </connection>
    <imports>
        <import>
            <concepts>
                <creator xmlns="http://www.julielab.de/conceptdb/concepts/ncbigene">
                    <name>de.julielab.concepts.db.creators.NCBIGeneConceptCreator</name>
                    <configuration>
                        <basepath>src/test/resources/geneconcepts/</basepath>
                        <gene_info>genes/gene_info_test</gene_info>
                        <genedescriptions>genes/gene2summary_test</genedescriptions>
                        <organismlist>organisms/taxIdsForTests.lst</organismlist>
                        <organismnames>organisms/names_test.dmp</organismnames>
                        <homologene>genes/homologene_test.data</homologene>
                        <gene_group>genes/gene_group_test</gene_group>
                    </configuration>
                </creator>
            </concepts>
            <facet>
                <creator xmlns="http://www.julielab.de/conceptdb/facets/default">
                    <name>DefaultFacetCreator</name>
                    <configuration>
                        <name>Genes</name>
                        <sourcetype>hierarchical</sourcetype>
                        <facetgroup>
                            <name>Genes</name>
                        </facetgroup>
                    </configuration>
                </creator>
            </facet>
        </import>
    </imports>
    <operations>
        <operation name="copy_aggregate_properties">
            <request>
                <class>de.julielab.neo4j.plugins.concepts.ConceptAggregateManager</class>
                <method>copyAggregateProperties</method>
            </request>
        </operation>
        <operation name="copy_preferred_names_lowercase">
            <request>
                <!-- This requires the APOC core library to be installed -->
                <cypherquery>CALL apoc.periodic.iterate("MATCH (c:CONCEPT) WHERE c.preferredName IS NOT null RETURN c", "SET c.preferredName_lc = toLower(c.preferredName)",{batchSize:1000,iterateList:true,parallel:true,concurrency:50,retries:0}) YIELD batches, total</cypherquery>
            </request>
        </operation>
    </operations>
    <exports>
        <export name="conceptids">
            <request>
                <class>de.julielab.neo4j.plugins.Export</class>
                <method>exportIdMapping</method>
                <parameters>
                    <parameter name="source_id_property" javatype="java.lang.String">originalId</parameter>
                    <parameter name="target_id_property" javatype="java.lang.String">id</parameter>
                    <parameter name="labels" toescapedjson="false" javatype="java.lang.String">["ID_MAP_NCBI_GENES"]</parameter>
                </parameters>
            </request>
            <outputfile>es-consumer-resources/egid2tid.map</outputfile>
        </export>
        <export name="allgeneaggregates">
            <request>
                <cypherquery>MATCH (th)-[:HAS_ELEMENT*]->(c:CONCEPT) WHERE (th:AGGREGATE_GENEGROUP OR
                    th:AGGREGATE_TOP_ORTHOLOGY) AND NOT c:AGGREGATE with c.id as cid,COLLECT(DISTINCT th.id) AS atids RETURN
                    cid, REDUCE(acc=HEAD(atids), atid in TAIL(atids) | acc + "|" + atid)
                </cypherquery>
            </request>
            <outputfile>es-consumer-resources/tid2atid.map</outputfile>
        </export>
        <export name="tophomologyids">
            <request>
                <cypherquery>MATCH (th:AGGREGATE_GENEGROUP)-[:HAS_ELEMENT*1..5]->(c:CONCEPT) WHERE NOT c:AGGREGATE
                    RETURN DISTINCT c.id,th.id
                </cypherquery>
            </request>
            <outputfile>es-consumer-resources/tid2tophomo.map</outputfile>
        </export>
        <export name="preferredNames">
            <request>
                <cypherquery>MATCH (gene:ID_MAP_NCBI_GENES) return gene.id,gene.preferredName</cypherquery>
            </request>
            <outputfile>es-consumer-resources/tid2prefName.map</outputfile>
        </export>
        <export name="preferredTophomologyNames">
            <request>
                <cypherquery>MATCH (t:ID_MAP_NCBI_GENES) WITH t OPTIONAL MATCH
                    (t)-[:HAS_ELEMENT*2]-(n:AGGREGATE_GENEGROUP) RETURN DISTINCT t.id, COALESCE(n.preferredName,
                    t.preferredName)
                </cypherquery>
            </request>
            <outputfile>es-consumer-resources/tid2topHomologyPrefName.map</outputfile>
        </export>
    </exports>
</conceptdatabase>
