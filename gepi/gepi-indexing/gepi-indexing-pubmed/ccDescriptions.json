[{"uri":"file:/Users/faessler/Coding/git/gepi/gepi/gepi-indexing/gepi-indexing-pubmed/./descAll/JCore%20ElasticSearch%20Consumer.xml","location":"de.julielab.jcore.consumer.es.desc.jcore-elasticsearch-consumer","category":"consumer","uimaDescPath":"JCore ElasticSearch Consumer.xml","metaDescription":{"description":"This component converts CAS annotations into a JSON format that originates from Solr's preanalyzed field type. At the JulieLab, there is an ElasticSearch plugin making this format accessible also by ElasticSearch. Configuration happens right in Java code. Note that the component is also able to generate perfectly valid ElasticSearch default JSON which does not require the plugin. Then, however, the preanalyzed data format cannot be used because this is the format that required the ElasticSearch plugin.","group":"general","module":{"type":"GitHubRepository","name":"jcore-base","version":"v2.6","updateable":true,"type":"GitHubRepository","gitHubName":"JULIELab"},"base":null,"exposable":true,"categories":["consumer"],"pear":false,"name":"JCoRe ElasticSearch Consumer","base-project":null,"maven-artifact":{"groupId":"de.julielab","artifactId":"jcore-elasticsearch-consumer","version":"2.6.1-SNAPSHOT","classifier":null,"file":"/Users/faessler/.m2/repository/de/julielab/jcore-elasticsearch-consumer/2.6.1-SNAPSHOT/jcore-elasticsearch-consumer-2.6.1-SNAPSHOT.jar","packaging":"jar"}},"name":"JCore ElasticSearch Consumer","active":false},{"uri":"file:/Users/faessler/Coding/git/gepi/gepi/gepi-indexing/gepi-indexing-pubmed/./desc/JCoRe%20ElasticSearch%20Consumer%20Localhost.xml","location":"de.julielab.jcore.consumer.es.desc.jcore-elasticsearch-consumer","category":"consumer","uimaDescPath":"JCoRe ElasticSearch Consumer Localhost.xml","metaDescription":{"description":"This component converts CAS annotations into a JSON format that originates from Solr's preanalyzed field type. At the JulieLab, there is an ElasticSearch plugin making this format accessible also by ElasticSearch. Configuration happens right in Java code. Note that the component is also able to generate perfectly valid ElasticSearch default JSON which does not require the plugin. Then, however, the preanalyzed data format cannot be used because this is the format that required the ElasticSearch plugin.","group":"general","module":{"type":"GitHubRepository","name":"jcore-base","version":"v2.6","updateable":true,"type":"GitHubRepository","gitHubName":"JULIELab"},"base":null,"exposable":true,"categories":["consumer"],"pear":false,"name":"JCoRe ElasticSearch Consumer","base-project":null,"maven-artifact":{"groupId":"de.julielab","artifactId":"jcore-elasticsearch-consumer","version":"2.6.1-SNAPSHOT","classifier":null,"file":"/Users/faessler/.m2/repository/de/julielab/jcore-elasticsearch-consumer/2.6.1-SNAPSHOT/jcore-elasticsearch-consumer-2.6.1-SNAPSHOT.jar","packaging":"jar"}},"name":"JCoRe ElasticSearch Consumer Localhost","active":true},{"uri":"file:/Users/faessler/Coding/git/gepi/gepi/gepi-indexing/gepi-indexing-pubmed/./descAll/XMIWriter.xml","location":"de.julielab.jcore.consumer.xmi.desc.jcore-xmi-writer","category":"consumer","uimaDescPath":"XMIWriter.xml","metaDescription":{"description":"JCoRe XMI Writer. A CAS consumer that writes/converts CAS objects to XMI files.","group":"general","module":{"type":"GitHubRepository","name":"jcore-base","version":"v2.6","updateable":true,"type":"GitHubRepository","gitHubName":"JULIELab"},"base":null,"exposable":true,"categories":["consumer"],"pear":false,"name":"JCoRe XMI Writer","base-project":null,"maven-artifact":{"groupId":"de.julielab","artifactId":"jcore-xmi-writer","version":"2.6.0-SNAPSHOT","classifier":null,"file":"/Users/faessler/.m2/repository/de/julielab/jcore-xmi-writer/2.6.0-SNAPSHOT/jcore-xmi-writer-2.6.0-20210927.090338-32.jar","packaging":"jar"}},"name":"XMIWriter","active":false},{"uri":"file:/Users/faessler/Coding/git/gepi/gepi/gepi-indexing/gepi-indexing-pubmed/./desc/JCoRe%20Database%20Checkpoint%20Writer.xml","location":"de.julielab.jcore.ae.checkpoint.desc.jcore-db-checkpoint-consumer","category":"consumer","uimaDescPath":"JCoRe Database Checkpoint Writer.xml","metaDescription":{"description":"This is a JeDIS component. It can be used to set the 'last component' column in a subset table. This help to keep track of the pipeline status.","group":"general","module":{"type":"GitHubRepository","name":"jcore-base","version":"v2.6","updateable":true,"type":"GitHubRepository","gitHubName":"JULIELab"},"base":null,"exposable":true,"categories":["consumer","ae"],"pear":false,"name":"JCoRe Database Checkpoint AE","base-project":null,"maven-artifact":{"groupId":"de.julielab","artifactId":"jcore-db-checkpoint-ae","version":"2.6.0-SNAPSHOT","classifier":null,"file":"/Users/faessler/.m2/repository/de/julielab/jcore-db-checkpoint-ae/2.6.0-SNAPSHOT/jcore-db-checkpoint-ae-2.6.0-20220720.114818-42.jar","packaging":"jar"}},"name":"JCoRe Database Checkpoint Writer","active":true}]